@mixin single-box-shadow($color: $default-box-shadow-color, $hoff: $default-box-shadow-h-offset, 
    $voff: $default-box-shadow-v-offset, $blur: $default-box-shadow-blur, $spread: $default-box-shadow-spread, 
    $inset: $default-box-shadow-inset) {
    @if not ($inset == true or $inset == false or $inset == inset) {
        @warn "$inset expected to be true or the inset keyword. Got #{$inset} instead. Using: inset";
    }
    @if $color == none {
        @include box-shadow(none);
    }
    @else {
        $full: $hoff $voff;
        @if $blur {
            $full: $full $blur;
        }
        @if $spread {
            $full: $full $spread;
        }
        @if $color {
            $full: $full $color;
        }
        @if $inset {
        $full: inset $full;
        }
        @include box-shadow($full);
    }
}

@mixin single-transition($property: $default-transition-property, $duration: $default-transition-duration, 
    $function: $default-transition-function, $delay: $default-transition-delay) {
        @include transition(compact($property $duration $function $delay));
}

@mixin pie-element($approach: $pie-default-approach, $z-index: 0) {
    behavior: $pie-behavior;
    @if $approach == relative {
        position: relative;
    }
    @else if $approach == z-index {
        z-index: $z-index;
    }
}

@mixin pie($base-class: $pie-base-class) {
    @if $base-class {
        @extend .#{$base-class};
    }
    @else {
        @include pie-element;
    }
}

@mixin border-radius($radius: $default-border-radius, $vertical-radius: false) {
    @if $vertical-radius {
        // Webkit doesn't understand the official shorthand syntax for specifying
        // a vertical radius unless so in case there's several we only take the first.
        @include experimental(border-radius, first-value-of($radius) first-value-of($vertical-radius), not -moz, -webkit, not -o, not -ms, not -khtml, not official);
        @include experimental("border-radius", $radius unquote("/") $vertical-radius, -moz, not -webkit, not -o, not -ms, -khtml, official);
    }
    @else {
        @include experimental(border-radius, $radius);
    }
}